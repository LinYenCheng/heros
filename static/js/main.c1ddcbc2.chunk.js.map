{"version":3,"sources":["serviceWorker.js","middleware/API.js","components/SkillCounter.js","hooks/useCounter.js","components/SkillChart.js","components/HeroProfile.js","components/HeroCard.js","components/HeroList.js","components/Root.js","index.js"],"names":["Boolean","window","location","hostname","match","isModalOpen","API","axios","create","baseURL","timeout","responseType","interceptors","response","use","status","data","statusText","parseBody","camelizeKeys","error","Swal","type","title","showConfirmButton","showCloseButton","onClose","Promise","reject","SkillCounter","props","skill","nowProfile","setNowProfile","experiencePoint","addExperiencePoint","reduceExperiencePoint","warnClass","classNames","skill__value","showAlert","text","timer","className","toUpperCase","onClick","tempProfile","JSON","parse","stringify","useCounter","initial","useState","count","setCount","reset","increment","decrement","changeObjectKeyToUpperCase","obj","objTemp","Object","keys","forEach","key","SkillChart","skills","maxValue","Math","max","map","DATA","DOMAIN","name","domain","tickFormat","t","parseInt","domains","color","margin","left","top","bottom","right","width","height","tickValues","Array","v","i","HeroProfile","heroId","params","isLoading","setIsLoading","isPatching","setIsPatching","resetExperiencePoint","center","btnSummitClass","btn","blockSkillForm","strButtonTitle","useEffect","patch","then","res","get","dataProfile","style","verticalAlign","marginLeft","minWidth","display","withRouter","hero","id","image","cardClass","thumbnail","hero__card","pathname","history","matchPath","path","getHeroIdFromPath","to","src","replace","alt","heroes","setHeroes","url","blockHeros","nowHeroes","length","component","Root","exact","render","HeroList","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1ddcbc2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // const result = window.confirm('網頁版本更新');\n              console.log('網頁版本更新，請關閉相關視窗後重新開啟 http://bit.ly/CRA-PWA.');\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { camelizeKeys } from 'humps';\n\nlet isModalOpen = false;\nconst API_URL = 'https://hahow-recruit.herokuapp.com';\n\n/**\n * parse response\n */\nfunction parseBody(response) {\n  if (response.status === 200) {\n    if (process.env.NODE_ENV === 'development') {\n      console.log({\n        url: response.config.url,\n        result: response.data || response.statusText,\n      });\n    }\n    return response.data || response.statusText;\n  }\n  return false;\n}\n\n/**\n * axios instance\n */\nconst API = axios.create({\n  baseURL: API_URL,\n  timeout: 8000,\n  responseType: 'json',\n});\n\n// response parse\nAPI.interceptors.response.use(\n  response => parseBody(camelizeKeys(response)),\n  error => {\n    // console.warn('Error status', error);\n    if (error.response) {\n      if (error.response.status === 500) {\n        if (!isModalOpen) {\n          Swal({\n            type: 'error',\n            title: '連線或伺服器發生錯誤',\n            showConfirmButton: false,\n            showCloseButton: true,\n            onClose: () => {\n              isModalOpen = false;\n            },\n          });\n        }\n      }\n      return false;\n    }\n    return Promise.reject(error);\n  },\n);\n\nexport default API;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Swal from 'sweetalert2';\nimport classNames from 'classnames';\n\nfunction SkillCounter(props) {\n  const {\n    skill,\n    nowProfile,\n    setNowProfile,\n    experiencePoint,\n    addExperiencePoint,\n    reduceExperiencePoint,\n  } = props;\n\n  const warnClass = classNames({\n    skill__value: true,\n    'color--warn': nowProfile[skill] < 4,\n  });\n\n  function showAlert(text) {\n    Swal({\n      type: 'info',\n      title: text,\n      showConfirmButton: false,\n      showCloseButton: true,\n      timer: 1000,\n    });\n  }\n\n  function addSkillPoint() {\n    const tempProfile = JSON.parse(JSON.stringify(nowProfile));\n    if (experiencePoint > 0) {\n      tempProfile[skill] += 1;\n      setNowProfile(tempProfile);\n      reduceExperiencePoint();\n    } else {\n      showAlert('請先減少其他點數');\n    }\n  }\n\n  function reduceSkillPoint() {\n    const tempProfile = JSON.parse(JSON.stringify(nowProfile));\n    if (tempProfile[skill] > 0) {\n      tempProfile[skill] -= 1;\n      setNowProfile(tempProfile);\n      addExperiencePoint();\n    } else {\n      showAlert('技能點數不能為負');\n    }\n  }\n\n  return (\n    <div className=\"skill__container\">\n      <span className=\"skill__title\">{skill.toUpperCase()}</span>\n      <button type=\"button\" className=\"btn skill__button\" onClick={addSkillPoint}>\n        <span className=\"glyphicon glyphicon-plus\" />\n      </button>\n      <span className={warnClass}>{nowProfile[skill]}</span>\n      <button type=\"button\" className=\"btn skill__button\" onClick={reduceSkillPoint}>\n        <span className=\"glyphicon glyphicon-minus\" />\n      </button>\n    </div>\n  );\n}\n\nSkillCounter.propTypes = {\n  skill: PropTypes.string.isRequired,\n  setNowProfile: PropTypes.func.isRequired,\n  experiencePoint: PropTypes.number.isRequired,\n  addExperiencePoint: PropTypes.func.isRequired,\n  reduceExperiencePoint: PropTypes.func.isRequired,\n  nowProfile: PropTypes.object.isRequired,\n};\n\nexport default SkillCounter;\n","import { useState } from 'react';\n\nfunction useCounter(initial) {\n  const [count, setCount] = useState(initial);\n  const increment = () => setCount(count + 1);\n  const decrement = () => setCount(count - 1);\n  const reset = () => setCount(0);\n  return { reset, count, increment, decrement };\n}\n\nexport default useCounter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RadarChart, CircularGridLines } from 'react-vis';\n\nfunction changeObjectKeyToUpperCase(obj) {\n  const objTemp = {};\n  Object.keys(obj).forEach(key => {\n    objTemp[key.toUpperCase()] = obj[key];\n  });\n  return objTemp;\n}\n\nfunction SkillChart(props) {\n  const { nowProfile } = props;\n  const skills = Object.keys(nowProfile);\n  const maxValue = Math.max(...skills.map(skill => nowProfile[skill]));\n  const DATA = [changeObjectKeyToUpperCase(nowProfile)];\n  const DOMAIN = skills.map(skill => ({\n    name: skill.toUpperCase(),\n    domain: [0, maxValue],\n    tickFormat: t => parseInt(t, 10),\n  }));\n\n  return (\n    <RadarChart\n      data={DATA}\n      domains={DOMAIN}\n      color=\"#00bea4\"\n      margin={{\n        left: 30,\n        top: 30,\n        bottom: 30,\n        right: 30,\n      }}\n      width={250}\n      height={250}\n    >\n      <CircularGridLines tickValues={[...new Array(maxValue)].map((v, i) => i / 10 - 1)} />\n    </RadarChart>\n  );\n}\n\nSkillChart.propTypes = {\n  nowProfile: PropTypes.object.isRequired,\n};\n\nexport default SkillChart;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Swal from 'sweetalert2';\nimport classNames from 'classnames';\n\nimport SkillCounter from './SkillCounter';\nimport useCounter from '../hooks/useCounter';\nimport API from '../middleware/API';\nimport SkillChart from './SkillChart';\n\nfunction HeroProfile(props) {\n  const {\n    match: {\n      params: { heroId },\n    },\n  } = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPatching, setIsPatching] = useState(false);\n  const [nowProfile, setNowProfile] = useState(false);\n  const {\n    count: experiencePoint,\n    increment: addExperiencePoint,\n    decrement: reduceExperiencePoint,\n    reset: resetExperiencePoint,\n  } = useCounter(0);\n\n  const warnClass = classNames({\n    'color--warn': experiencePoint !== 0,\n    center: true,\n  });\n\n  const btnSummitClass = classNames({\n    btn: true,\n    'btn-default': true,\n    'cursor--not-allowed': experiencePoint !== 0,\n  });\n\n  let blockSkillForm = '';\n  let strButtonTitle = '儲存';\n\n  useEffect(() => {\n    if (isPatching) {\n      API.patch(`/heroes/${heroId}/profile`, nowProfile).then(res => {\n        if (res === 'OK') {\n          Swal({\n            type: 'success',\n            title: '修改成功',\n            showConfirmButton: false,\n            showCloseButton: false,\n            timer: 1000,\n            onClose: () => {\n              setIsPatching(false);\n              setNowProfile(nowProfile);\n              resetExperiencePoint();\n            },\n          });\n        }\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (heroId) {\n      setIsLoading(true);\n      API.get(`/heroes/${heroId}/profile`).then(dataProfile => {\n        setNowProfile(dataProfile);\n        setIsLoading(false);\n        resetExperiencePoint();\n      });\n    }\n  }, [heroId]);\n\n  function patchProfile() {\n    if (experiencePoint === 0) {\n      setIsPatching(true);\n    } else {\n      // 提醒\n      Swal({\n        type: 'info',\n        title: '尚有點數',\n        showConfirmButton: false,\n        showCloseButton: true,\n        timer: 1000,\n      });\n    }\n  }\n\n  if (experiencePoint !== 0) strButtonTitle = '尚有點數';\n\n  if (nowProfile && !isLoading && !isPatching) {\n    blockSkillForm = (\n      <>\n        <div className=\"col-sm-12 col-md-8\">\n          <div className=\"div--inline-block\">\n            {Object.keys(nowProfile).map(key => (\n              <SkillCounter\n                key={key}\n                skill={key}\n                experiencePoint={experiencePoint}\n                nowProfile={nowProfile}\n                setNowProfile={setNowProfile}\n                addExperiencePoint={addExperiencePoint}\n                reduceExperiencePoint={reduceExperiencePoint}\n              />\n            ))}\n          </div>\n          <div\n            className=\"div--inline-block center mobile--hide\"\n            style={{ verticalAlign: 'top', marginLeft: '15px' }}\n          >\n            <SkillChart nowProfile={nowProfile} />\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-md-4\">\n          <div className=\"profile__form\">\n            <h4>\n              <span>剩餘點數:</span>\n              <span className={warnClass} style={{ minWidth: '40px', display: 'inline-block' }}>\n                {experiencePoint}\n              </span>\n            </h4>\n            <button\n              type=\"button\"\n              className={btnSummitClass}\n              title={strButtonTitle}\n              onClick={patchProfile}\n            >\n              {strButtonTitle}\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return <div className=\"row profile__container\">{blockSkillForm}</div>;\n}\n\nHeroProfile.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      heroId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default HeroProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link, matchPath, withRouter } from 'react-router-dom';\n\nfunction HeroCard(props) {\n  const {\n    hero: { id, name, image },\n  } = props;\n\n  function getHeroIdFromPath() {\n    const {\n      history: {\n        location: { pathname },\n      },\n    } = props;\n    const match = matchPath(pathname, {\n      path: '/heros/:heroId',\n    });\n\n    let heroId = 0;\n    if (match && match.params.heroId) {\n      heroId = match.params.heroId;\n    }\n    return heroId;\n  }\n\n  const cardClass = classNames({\n    thumbnail: true,\n    hero__card: true,\n    'hero__card--select': getHeroIdFromPath() === id,\n  });\n\n  return (\n    <Link to={`/heros/${id}`}>\n      <div className=\"col-xs-6 col-sm-6 col-md-3 padding--mobile\">\n        <div className={cardClass}>\n          <div className=\"card__image-container\">\n            <img src={image.replace('http', 'https')} alt=\"...\" />\n          </div>\n          <div className=\"caption center\">\n            <h3>{name}</h3>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nHeroCard.propTypes = {\n  hero: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default withRouter(HeroCard);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, withRouter } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nimport '../styles/Root.scss';\nimport API from '../middleware/API';\nimport HeroProfile from './HeroProfile';\nimport HeroCard from './HeroCard';\n\nfunction HeroList(props) {\n  const [heroes, setHeroes] = useState([]);\n  const {\n    match: { url },\n  } = props;\n  let blockHeros = '';\n\n  useEffect(() => {\n    API.get('/heroes').then(nowHeroes => {\n      if (nowHeroes) {\n        setHeroes(nowHeroes);\n        Swal({\n          type: 'success',\n          title: '選擇英雄',\n          text: '進行技能點數分配',\n          showConfirmButton: false,\n          showCloseButton: true,\n          timer: 3000,\n        });\n      }\n    });\n  }, []);\n\n  if (heroes && heroes.length) {\n    blockHeros = heroes.map(hero => {\n      const { id } = hero;\n      return <HeroCard key={id} hero={hero} />;\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <br />\n      <div className=\"row\">{blockHeros}</div>\n      <Route path={`${url}/:heroId`} component={HeroProfile} />\n    </div>\n  );\n}\n\nHeroList.propTypes = {\n  match: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(HeroList);\n","import React from 'react';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport HeroList from './HeroList';\n\nconst Root = () => (\n  <Router>\n    <Route exact path=\"/\" render={() => <Redirect to=\"/heros\" />} />\n    <Route path=\"/heros\" component={HeroList} />\n  </Router>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport Root from './components/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}